package parameters

// This file was generated by the gogi.
// Editing this file might prove futile when you re-run the gogi generate command

import (
	"stash.lamoda.ru/neurocapsule/neurocapsule/app/scratch/generated/server/models"

	"github.com/go-openapi/validate"

	openapiErrors "github.com/go-openapi/errors"
)

// NeurocapsuleGetParams contains all the bound params for the neurocapsule get operation
// typically these are obtained from a http.Request
//
// swagger:parameters neurocapsule.get
type NeurocapsuleGetParams struct {
	/*
	  Required: true
	  In: query
	*/
	ColorBase string `query:"color_base"`
	/*
	  Required: true
	  In: query
	*/
	ColorScheme string `query:"color_scheme"`
	/*Comma-separated list of values sku: QE456EMBT231,MP002XM4F7C9,MP002XM101FC
	  In: query
	*/
	ExcludedSkuList *string `query:"excluded_sku_list"`
	/*
	  Required: true
	  In: query
	*/
	ID string `query:"id"`
	/*
	  Required: true
	  In: query
	*/
	Jsonrpc string `query:"jsonrpc"`
	/*
	  Required: true
	  In: query
	*/
	PriceSegment string `query:"price_segment"`
}

// NewNeurocapsuleGetParams creates a new NeurocapsuleGetParams object
// with the default values initialized.
func NewNeurocapsuleGetParams() NeurocapsuleGetParams {
	var ()
	return NeurocapsuleGetParams{}
}

func (o *NeurocapsuleGetParams) Validate() error {

	if o.ColorBase == "" {
		return openapiErrors.Required("color_base", "", nil)
	}

	if err := validate.Enum("color_base", "", o.ColorBase, []interface{}{"brown", "khaki", "darkBlue", "blackWhite"}); err != nil {
		return err
	}

	if o.ColorScheme == "" {
		return openapiErrors.Required("color_scheme", "", nil)
	}

	if err := validate.Enum("color_scheme", "", o.ColorScheme, []interface{}{"contrast", "monochrome", "classic"}); err != nil {
		return err
	}

	if o.ID == "" {
		return openapiErrors.Required("id", "", nil)
	}

	if o.Jsonrpc == "" {
		return openapiErrors.Required("jsonrpc", "", nil)
	}

	if o.PriceSegment == "" {
		return openapiErrors.Required("price_segment", "", nil)
	}

	if err := validate.Enum("price_segment", "", o.PriceSegment, []interface{}{"low", "middle", "high"}); err != nil {
		return err
	}

	return nil
}

/*NeurocapsuleGetOKBody neurocapsule get o k body
swagger:model NeurocapsuleGetOKBody
*/
// easyjson:json
type NeurocapsuleGetOKBody struct {
	models.BaseResponse

	// result
	// Required: true
	Result models.NeurocapsuleResponse `json:"result"`
}
