// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package models

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjsonC5a4559bDecodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels(in *jlexer.Lexer, out *Trousers) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "id":
			out.ID = int64(in.Int64())
		case "size":
			out.Size = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC5a4559bEncodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels(out *jwriter.Writer, in Trousers) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.ID))
	}
	{
		const prefix string = ",\"size\":"
		out.RawString(prefix)
		out.String(string(in.Size))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Trousers) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC5a4559bEncodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Trousers) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC5a4559bEncodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Trousers) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC5a4559bDecodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Trousers) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC5a4559bDecodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels(l, v)
}
func easyjsonC5a4559bDecodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels1(in *jlexer.Lexer, out *Product) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "color":
			out.Color = string(in.String())
		case "full_sku":
			out.FullSku = string(in.String())
		case "gallery":
			out.Gallery = string(in.String())
		case "name":
			out.Name = string(in.String())
		case "price_amount":
			out.PriceAmount = int64(in.Int64())
		case "sku":
			out.Sku = string(in.String())
		case "thumbnail":
			out.Thumbnail = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC5a4559bEncodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels1(out *jwriter.Writer, in Product) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"color\":"
		out.RawString(prefix[1:])
		out.String(string(in.Color))
	}
	if in.FullSku != "" {
		const prefix string = ",\"full_sku\":"
		out.RawString(prefix)
		out.String(string(in.FullSku))
	}
	{
		const prefix string = ",\"gallery\":"
		out.RawString(prefix)
		out.String(string(in.Gallery))
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	{
		const prefix string = ",\"price_amount\":"
		out.RawString(prefix)
		out.Int64(int64(in.PriceAmount))
	}
	{
		const prefix string = ",\"sku\":"
		out.RawString(prefix)
		out.String(string(in.Sku))
	}
	{
		const prefix string = ",\"thumbnail\":"
		out.RawString(prefix)
		out.String(string(in.Thumbnail))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Product) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC5a4559bEncodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Product) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC5a4559bEncodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Product) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC5a4559bDecodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Product) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC5a4559bDecodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels1(l, v)
}
func easyjsonC5a4559bDecodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels2(in *jlexer.Lexer, out *NeurocapsuleResponseNeurocapsuleTop2) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "blazer":
			if in.IsNull() {
				in.Skip()
				out.Blazer = nil
			} else {
				if out.Blazer == nil {
					out.Blazer = new(Product)
				}
				(*out.Blazer).UnmarshalEasyJSON(in)
			}
		case "hoodie":
			if in.IsNull() {
				in.Skip()
				out.Hoodie = nil
			} else {
				if out.Hoodie == nil {
					out.Hoodie = new(Product)
				}
				(*out.Hoodie).UnmarshalEasyJSON(in)
			}
		case "sweater":
			if in.IsNull() {
				in.Skip()
				out.Sweater = nil
			} else {
				if out.Sweater == nil {
					out.Sweater = new(Product)
				}
				(*out.Sweater).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC5a4559bEncodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels2(out *jwriter.Writer, in NeurocapsuleResponseNeurocapsuleTop2) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"blazer\":"
		out.RawString(prefix[1:])
		if in.Blazer == nil {
			out.RawString("null")
		} else {
			(*in.Blazer).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"hoodie\":"
		out.RawString(prefix)
		if in.Hoodie == nil {
			out.RawString("null")
		} else {
			(*in.Hoodie).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"sweater\":"
		out.RawString(prefix)
		if in.Sweater == nil {
			out.RawString("null")
		} else {
			(*in.Sweater).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v NeurocapsuleResponseNeurocapsuleTop2) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC5a4559bEncodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v NeurocapsuleResponseNeurocapsuleTop2) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC5a4559bEncodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *NeurocapsuleResponseNeurocapsuleTop2) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC5a4559bDecodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *NeurocapsuleResponseNeurocapsuleTop2) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC5a4559bDecodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels2(l, v)
}
func easyjsonC5a4559bDecodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels3(in *jlexer.Lexer, out *NeurocapsuleResponseNeurocapsuleTop1) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "shirt1":
			if in.IsNull() {
				in.Skip()
				out.Shirt1 = nil
			} else {
				if out.Shirt1 == nil {
					out.Shirt1 = new(Product)
				}
				(*out.Shirt1).UnmarshalEasyJSON(in)
			}
		case "shirt2":
			if in.IsNull() {
				in.Skip()
				out.Shirt2 = nil
			} else {
				if out.Shirt2 == nil {
					out.Shirt2 = new(Product)
				}
				(*out.Shirt2).UnmarshalEasyJSON(in)
			}
		case "tShirt1":
			if in.IsNull() {
				in.Skip()
				out.TShirt1 = nil
			} else {
				if out.TShirt1 == nil {
					out.TShirt1 = new(Product)
				}
				(*out.TShirt1).UnmarshalEasyJSON(in)
			}
		case "tShirt2":
			if in.IsNull() {
				in.Skip()
				out.TShirt2 = nil
			} else {
				if out.TShirt2 == nil {
					out.TShirt2 = new(Product)
				}
				(*out.TShirt2).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC5a4559bEncodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels3(out *jwriter.Writer, in NeurocapsuleResponseNeurocapsuleTop1) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"shirt1\":"
		out.RawString(prefix[1:])
		if in.Shirt1 == nil {
			out.RawString("null")
		} else {
			(*in.Shirt1).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"shirt2\":"
		out.RawString(prefix)
		if in.Shirt2 == nil {
			out.RawString("null")
		} else {
			(*in.Shirt2).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"tShirt1\":"
		out.RawString(prefix)
		if in.TShirt1 == nil {
			out.RawString("null")
		} else {
			(*in.TShirt1).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"tShirt2\":"
		out.RawString(prefix)
		if in.TShirt2 == nil {
			out.RawString("null")
		} else {
			(*in.TShirt2).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v NeurocapsuleResponseNeurocapsuleTop1) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC5a4559bEncodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v NeurocapsuleResponseNeurocapsuleTop1) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC5a4559bEncodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *NeurocapsuleResponseNeurocapsuleTop1) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC5a4559bDecodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *NeurocapsuleResponseNeurocapsuleTop1) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC5a4559bDecodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels3(l, v)
}
func easyjsonC5a4559bDecodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels4(in *jlexer.Lexer, out *NeurocapsuleResponseNeurocapsuleBottom) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "jeans":
			if in.IsNull() {
				in.Skip()
				out.Jeans = nil
			} else {
				if out.Jeans == nil {
					out.Jeans = new(Product)
				}
				(*out.Jeans).UnmarshalEasyJSON(in)
			}
		case "sweatpants":
			if in.IsNull() {
				in.Skip()
				out.Sweatpants = nil
			} else {
				if out.Sweatpants == nil {
					out.Sweatpants = new(Product)
				}
				(*out.Sweatpants).UnmarshalEasyJSON(in)
			}
		case "trousers":
			if in.IsNull() {
				in.Skip()
				out.Trousers = nil
			} else {
				if out.Trousers == nil {
					out.Trousers = new(Product)
				}
				(*out.Trousers).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC5a4559bEncodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels4(out *jwriter.Writer, in NeurocapsuleResponseNeurocapsuleBottom) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"jeans\":"
		out.RawString(prefix[1:])
		if in.Jeans == nil {
			out.RawString("null")
		} else {
			(*in.Jeans).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"sweatpants\":"
		out.RawString(prefix)
		if in.Sweatpants == nil {
			out.RawString("null")
		} else {
			(*in.Sweatpants).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"trousers\":"
		out.RawString(prefix)
		if in.Trousers == nil {
			out.RawString("null")
		} else {
			(*in.Trousers).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v NeurocapsuleResponseNeurocapsuleBottom) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC5a4559bEncodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v NeurocapsuleResponseNeurocapsuleBottom) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC5a4559bEncodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *NeurocapsuleResponseNeurocapsuleBottom) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC5a4559bDecodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *NeurocapsuleResponseNeurocapsuleBottom) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC5a4559bDecodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels4(l, v)
}
func easyjsonC5a4559bDecodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels5(in *jlexer.Lexer, out *NeurocapsuleResponseNeurocapsule) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "bottom":
			if in.IsNull() {
				in.Skip()
				out.Bottom = nil
			} else {
				if out.Bottom == nil {
					out.Bottom = new(NeurocapsuleResponseNeurocapsuleBottom)
				}
				(*out.Bottom).UnmarshalEasyJSON(in)
			}
		case "top1":
			if in.IsNull() {
				in.Skip()
				out.Top1 = nil
			} else {
				if out.Top1 == nil {
					out.Top1 = new(NeurocapsuleResponseNeurocapsuleTop1)
				}
				(*out.Top1).UnmarshalEasyJSON(in)
			}
		case "top2":
			if in.IsNull() {
				in.Skip()
				out.Top2 = nil
			} else {
				if out.Top2 == nil {
					out.Top2 = new(NeurocapsuleResponseNeurocapsuleTop2)
				}
				(*out.Top2).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC5a4559bEncodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels5(out *jwriter.Writer, in NeurocapsuleResponseNeurocapsule) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"bottom\":"
		out.RawString(prefix[1:])
		if in.Bottom == nil {
			out.RawString("null")
		} else {
			(*in.Bottom).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"top1\":"
		out.RawString(prefix)
		if in.Top1 == nil {
			out.RawString("null")
		} else {
			(*in.Top1).MarshalEasyJSON(out)
		}
	}
	{
		const prefix string = ",\"top2\":"
		out.RawString(prefix)
		if in.Top2 == nil {
			out.RawString("null")
		} else {
			(*in.Top2).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v NeurocapsuleResponseNeurocapsule) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC5a4559bEncodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels5(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v NeurocapsuleResponseNeurocapsule) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC5a4559bEncodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels5(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *NeurocapsuleResponseNeurocapsule) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC5a4559bDecodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels5(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *NeurocapsuleResponseNeurocapsule) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC5a4559bDecodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels5(l, v)
}
func easyjsonC5a4559bDecodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels6(in *jlexer.Lexer, out *NeurocapsuleResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "neurocapsule":
			if in.IsNull() {
				in.Skip()
				out.Neurocapsule = nil
			} else {
				if out.Neurocapsule == nil {
					out.Neurocapsule = new(NeurocapsuleResponseNeurocapsule)
				}
				(*out.Neurocapsule).UnmarshalEasyJSON(in)
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC5a4559bEncodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels6(out *jwriter.Writer, in NeurocapsuleResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"neurocapsule\":"
		out.RawString(prefix[1:])
		if in.Neurocapsule == nil {
			out.RawString("null")
		} else {
			(*in.Neurocapsule).MarshalEasyJSON(out)
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v NeurocapsuleResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC5a4559bEncodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels6(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v NeurocapsuleResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC5a4559bEncodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels6(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *NeurocapsuleResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC5a4559bDecodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels6(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *NeurocapsuleResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC5a4559bDecodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels6(l, v)
}
func easyjsonC5a4559bDecodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels7(in *jlexer.Lexer, out *Error) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "code":
			out.Code = int64(in.Int64())
		case "data":
			if m, ok := out.Data.(easyjson.Unmarshaler); ok {
				m.UnmarshalEasyJSON(in)
			} else if m, ok := out.Data.(json.Unmarshaler); ok {
				_ = m.UnmarshalJSON(in.Raw())
			} else {
				out.Data = in.Interface()
			}
		case "message":
			out.Message = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC5a4559bEncodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels7(out *jwriter.Writer, in Error) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"code\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.Code))
	}
	if in.Data != nil {
		const prefix string = ",\"data\":"
		out.RawString(prefix)
		if m, ok := in.Data.(easyjson.Marshaler); ok {
			m.MarshalEasyJSON(out)
		} else if m, ok := in.Data.(json.Marshaler); ok {
			out.Raw(m.MarshalJSON())
		} else {
			out.Raw(json.Marshal(in.Data))
		}
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		out.String(string(in.Message))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Error) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC5a4559bEncodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels7(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Error) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC5a4559bEncodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels7(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Error) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC5a4559bDecodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels7(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Error) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC5a4559bDecodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels7(l, v)
}
func easyjsonC5a4559bDecodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels8(in *jlexer.Lexer, out *BaseResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "error":
			if in.IsNull() {
				in.Skip()
				out.Error = nil
			} else {
				if out.Error == nil {
					out.Error = new(Error)
				}
				(*out.Error).UnmarshalEasyJSON(in)
			}
		case "id":
			out.ID = string(in.String())
		case "jsonrpc":
			out.Jsonrpc = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonC5a4559bEncodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels8(out *jwriter.Writer, in BaseResponse) {
	out.RawByte('{')
	first := true
	_ = first
	if in.Error != nil {
		const prefix string = ",\"error\":"
		first = false
		out.RawString(prefix[1:])
		(*in.Error).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"id\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.ID))
	}
	{
		const prefix string = ",\"jsonrpc\":"
		out.RawString(prefix)
		out.String(string(in.Jsonrpc))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v BaseResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonC5a4559bEncodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels8(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v BaseResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonC5a4559bEncodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels8(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *BaseResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonC5a4559bDecodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels8(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *BaseResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonC5a4559bDecodeStashLamodaRuNeurocapsuleNeurocapsuleAppScratchGeneratedServerModels8(l, v)
}
